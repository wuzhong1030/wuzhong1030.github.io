(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{233:function(e,t,s){"use strict";s.r(t);var a=s(0),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("webpack4 新特性")]),e._v(" "),s("h2",{attrs:{id:"新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新特性"}},[e._v("#")]),e._v(" 新特性")]),e._v(" "),s("h3",{attrs:{id:"_0配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0配置"}},[e._v("#")]),e._v(" 0配置")]),e._v(" "),s("blockquote",[s("p",[e._v("entry，output增加了默认配置，即不设置的情况下，默认 entry 的入口文件在 ./src/index.js，output 默认输出 ./dist 目录下")])]),e._v(" "),s("h3",{attrs:{id:"增加mode选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增加mode选项"}},[e._v("#")]),e._v(" 增加mode选项")]),e._v(" "),s("blockquote",[s("p",[e._v("必填项，可以选择production或developmen。在production模式下，webpack会做一些默认的优化，比如代码压缩，同时会设置process.env.NODE_ENV=production；在development模式下，优化了增量构建，并且支持eval下的cssSourceMap，同样也会设置process.env.NODE_ENV=development")])]),e._v(" "),s("h3",{attrs:{id:"sideeffects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sideeffects"}},[e._v("#")]),e._v(" sideEffects")]),e._v(" "),s("blockquote",[s("p",[e._v("在package.json中增加sideEffects的支持，如果模块的package.json设置false，那么打包的时候，不会打包重复导出的代码")])]),e._v(" "),s("h3",{attrs:{id:"删除的功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除的功能"}},[e._v("#")]),e._v(" 删除的功能")]),e._v(" "),s("ul",[s("li",[e._v("移除了 module.loaders")]),e._v(" "),s("li",[e._v("移除了 loaderContext.options")]),e._v(" "),s("li",[e._v("移除了 Compilation.notCacheable")]),e._v(" "),s("li",[e._v("移除了 NoErrorsPlugin")]),e._v(" "),s("li",[e._v("移除了 Dependency.isEqualResource")]),e._v(" "),s("li",[e._v("移除了 NewWatchingPlugin")]),e._v(" "),s("li",[e._v("移除了 CommonsChunkPlugin")])])])}),[],!1,null,null,null);t.default=o.exports}}]);